{%- if license != "None" -%}
/////////////////////////////////////////////////////////////////////
// Copyright (c) {{ creation_year }} {{ license_owner }}.
// Distributed under the {{ license }}
// for more information read LICENSE file.
/////////////////////////////////////////////////////////////////////

{% endif -%}

{%- if unit_testing == "doctest" -%}
#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN

#include "{{ project_slug }}/{{ project_slug }}.hpp"
#include <doctest/doctest.h>

{%- if project_namespace|length %}{{ '\n\nnamespace ' ~ project_namespace ~ ' {' }}{% endif %}

TEST_CASE("Passing test case")
{
  REQUIRE(tested_function());
}

{%- if project_namespace|length %}{{ '\n\n} // namespace ' ~ project_namespace }} {%- endif %}
{%- elif unit_testing == "GTest" -%}
#include "{{ project_slug }}/{{ project_slug }}.hpp"
#include <gtest/gtest.h>

{%- if project_namespace|length %}{{ '\n\nnamespace ' ~ project_namespace ~ ' {' }}{% endif %}

TEST({{ project_slug|replace("_", " ")|title|replace(" ", "") }}, PassingTestCase)
{
  EXPECT_TRUE(tested_function());
}

{%- if project_namespace|length %}{{ '\n\n} // namespace ' ~ project_namespace }} {%- endif %}
{%- elif unit_testing == "Catch2" -%}
#include "{{ project_slug }}/{{ project_slug }}.hpp"
#include <catch2/catch_test_macros.hpp>

{%- if project_namespace|length %}{{ '\n\nnamespace ' ~ project_namespace ~ ' {' }}{% endif %}

TEST_CASE("First running unit test", "[{{ project_slug }}]")
{
  REQUIRE(tested_function());
}

{%- if project_namespace|length %}{{ '\n\n} // namespace ' ~ project_namespace }} {%- endif %}
{%- elif unit_testing == "boost-ext-ut" -%}
#include "{{ project_slug }}/{{ project_slug }}.hpp"
#include <boost/ut.hpp>

using boost::ut::operator""_test;
using namespace boost::ut;

{%- if project_namespace|length %}{{ '\n\nnamespace ' ~ project_namespace ~ ' {' }}{% endif %}

suite {{ project_slug }}_tests = [] { "first running"_test = [] { expect(tested_function()); }; };

{%- if project_namespace|length %}{{ '\n\n} // namespace ' ~ project_namespace }} {%- endif %}

int main() {}
{%- endif %}
