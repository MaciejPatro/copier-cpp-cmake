_subdirectory: "[[project_slug]]"

_skip_if_exists:
  - CHANGELOG.md
  - CREDITS.md

# common settings
project_name:
  type: str
  help: Your project name
  placeholder: My Great Project

project_setup:
  type: str
  help: |
    Type of configuration:
    - basic: reasonable defaults for simple projects
    - expert: extensive setup with choices for testing framework, C++ standard,
      CI, static analysis, packaging etc.
  default: basic
  choices:
    - basic
    - expert

project_slug:
  type: str
  help: Your project slug name - main folder
  default: "{{ project_name|lower|replace('-', '_')|replace(' ', '_') }}"

project_type:
  type: str
  help: Your project type
  default: header-only library
  choices:
    - header-only library
    - single library
    - single executable
    - multi-library project
    - multi-library with executable

license:
  type: str
  help: Chosen project license
  default: MIT License
  choices:
    - MIT License
    - GNU AGPLv3
    - GNU GPLv3
    - GNU LGPLv3
    - Mozilla Public License 2.0
    - Apache License 2.0
    - Boost Software License 1.0
    - None

creation_year:
  type: int
  when: "{{ license != 'None' }}"
  default: "{{ '%Y' | strftime }}"

license_owner:
  type: str
  help: Your project slug name - main folder
  when: "{{ license != 'None' }}"
  placeholder: John Doe

# expert settings
cpp_standard:
  type: int
  default: 17
  when: "{{ project_setup == 'expert' }}"
  choices:
    Cpp23: 23
    Cpp20: 20
    Cpp17: 17
    Cpp14: 14
    Cpp11: 11
    Cpp98: 0

cmake_min_version:
  type: str
  help: Minimal CMake version required to run project in future
  when: "{{ project_setup == 'expert' }}"
  default: 3.17

unit_testing_98:
  type: str
  default: null
  when: "{{ cpp_standard == 0 and project_setup == 'expert' }}"
  choices:
    - GTest
    - None

unit_testing_11:
  type: str
  default: "{% if project_setup == 'basic' %}GTest{% else %}null{% endif %}"
  when: "{{ cpp_standard > 0 and project_setup == 'expert' }}"
  choices:
    - doctest
    - GTest
    - None

ci_system:
  type: str
  help: Support for CI
  when: "{{ project_setup == 'expert' }}"
  default: 3.17
  choices:
    Gitlab CI: Gitlab
    Github actions: Github
    None: None

code_coverage:
  type: bool
  help: |
    Support for code coverage 
    - enabled by cmake setting -DWITH_COVERAGE=1
  when: "{{ project_setup == 'expert' }}"
  default: false

include_what_you_use:
  type: bool
  help: |
    Support for include-what-you-use-tool
    - enabled by cmake setting -DWITH_IWYU=1
  when: "{{ project_setup == 'expert' }}"
  default: false

sanitize:
  type: bool
  help: | 
    Support for address and undefined behaviour sanitizers 
    - enabled by cmake setting -DWITH_SANITIZE=1
  when: "{{ project_setup == 'expert' }}"
  default: false

# internal settings - set by users only indirectly via other settings
unit_testing:
  type: str
  when: false
  default: "{% if unit_testing_98 %}{{ unit_testing_98 }}{% else %}{{ unit_testing_11 }}{% endif %}"

dependencies:
  type: bool
  when: false
  default: "{% if unit_testing != 'None' %}true{% else %}false{% endif %}"
